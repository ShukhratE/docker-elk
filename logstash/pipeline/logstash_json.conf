input {
        file {
          path => "/opt/elk/logs/json/*"
          type => "json"
        }
}
filter {


  
    json {
        source => "message"
    }
     date {
            match => [ "time_local" , "dd/MMM/yyyy:HH:mm:ss.SSS Z" ]
            target => "@logtimestamp"
       }


       mutate {
            remove_field => ["message", "[agent][hostname]", "[agent][ephemeral_id]", "[agent][id]", "[ecs][version]", "input.type"]
            
            convert => ["status", "integer"]
            convert => ["bytes_sent", "integer"]
            convert => ["seconds", "float"]
            convert => ["request_time", "float"]
            convert => ["upstream_response_time", "float"]
            gsub => ['raw_post', '\\x22', '"']
            gsub => ["raw_post", "\\x5C", "[\\]"]
            gsub => ["raw_post", "\\x0A", ""]
            copy => { "request" => "newreq" }
        }

      mutate {
                split => ["newreq", " "]
                add_field => { "httpmethod" => "%{[newreq][0]}" }
                add_field => { "url_to_parse" => "%{[newreq][1]}" }
                add_field => { "httpversion" => "%{[newreq][2]}" }
                rename => { "request" => "fullrequest" }
                remove_field => ["newreq"]
        }
      mutate {
           split => ["url_to_parse", "?"]
           add_field => { "apicall" => "%{[url_to_parse][0]}" }
           add_field => { "uri_query" => "%{[url_to_parse][1]}" }

        }

      mutate {
                rename => { "apicall" => "request" }
                #remove_field => ["apicall", "uri_query"]
                remove_field => ["apicall"]
        }
}
output {
        elasticsearch {
           hosts => ["elasticsearch:9200"]
           index => "logstash_json-%{+YYYY.MM.dd}"
        }
   }
